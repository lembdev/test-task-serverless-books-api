service: test-task-serverless-books-api

app: test-task-serverless-books-api
org: lembdev

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      inMemory: true

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createBook:
    handler: functions/create.handler
    events:
      - http:
          path: books
          method: post
          cors: true
      - http:
          path: book/add
          method: post
          cors: true

  listBooks:
    handler: functions/list.handler
    events:
      - http:
          path: books
          method: get
          cors: true

  getBook:
    handler: functions/get.handler
    events:
      - http:
          path: books/{bookUuid}
          method: get
          cors: true
      - http:
          path: book/{bookUuid}
          method: get
          cors: true

  updateBook:
    handler: functions/update.handler
    events:
      - http:
          path: books/{bookUuid}
          method: put
          cors: true
      - http:
          path: book/{bookUuid}/update
          method: post
          cors: true

  deleteBook:
    handler: functions/delete.handler
    events:
      - http:
          path: books/{bookUuid}
          method: delete
          cors: true
      - http:
          path: book/{bookUuid}/delete
          method: post
          cors: true

resources:
  Resources:
    BooksDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
